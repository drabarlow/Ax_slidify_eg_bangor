my_tree <- nj(my_matrix)
my_root <- root(my_tree, outgroup=14)
par(mar=c(7,7,2,10), xpd=TRUE)
plot(my_root, show.tip.label=TRUE, edge.width=3)
#tiplabels(my_inf$loc, frame="none", adj=-0.2)
my_dmat <- read.table("./data/DMAT_agilis_001_DMAT.ibsMat")
my_matrix <- as.dist(as(my_dmat, "matrix"))
my_tree <- nj(my_matrix)
my_root <- root(my_tree, outgroup=12)
par(mar=c(7,7,2,10), xpd=TRUE)
plot(my_root, show.tip.label=TRUE, edge.width=3)
#tiplabels(my_inf$loc, frame="none", adj=-0.2)
my_dmat <- read.table("./data/DMAT_agilis_001_DMAT.ibsMat")
my_matrix <- as.dist(as(my_dmat, "matrix"))
my_tree <- nj(my_matrix)
my_root <- root(my_tree, outgroup=12)
par(mar=c(7,7,2,10), xpd=FALSE)
plot(my_root, show.tip.label=TRUE, edge.width=3)
tiplabels(my_inf$loc, frame="none", adj=-0.2)
my_dmat <- read.table("./data/DMAT_agilis_001_DMAT.ibsMat")
my_matrix <- as.dist(as(my_dmat, "matrix"))
my_tree <- nj(my_matrix)
my_root <- root(my_tree, outgroup=12)
par(mar=c(7,7,2,10), xpd=TRUE)
plot(my_root, show.tip.label=FALSE, edge.width=3)
tiplabels(my_inf$loc, frame="none", adj=-0.2)
my_dmat <- read.table("./data/DMAT_agilis_001_DMAT.ibsMat")
my_matrix <- as.dist(as(my_dmat, "matrix"))
my_tree <- nj(my_matrix)
my_root <- cladewise(root(my_tree, outgroup=12))
par(mar=c(7,7,2,10), xpd=TRUE)
plot(my_root, show.tip.label=FALSE, edge.width=3)
tiplabels(my_inf$loc, frame="none", adj=-0.2)
my_dmat <- read.table("./data/DMAT_agilis_001_DMAT.ibsMat")
my_matrix <- as.dist(as(my_dmat, "matrix"))
my_tree <- nj(my_matrix)
my_root <- root(my_tree, outgroup=12)
my_reorder <- reorder(my_root)
par(mar=c(7,7,2,10), xpd=TRUE)
plot(my_reorder, show.tip.label=FALSE, edge.width=3)
tiplabels(my_inf$loc, frame="none", adj=-0.2)
my_dmat <- read.table("./data/DMAT_agilis_001_DMAT.ibsMat")
my_matrix <- as.dist(as(my_dmat, "matrix"))
my_tree <- nj(my_matrix)
my_root <- root(my_tree, outgroup=14)
my_reorder <- reorder(my_root)
par(mar=c(7,7,2,10), xpd=TRUE)
plot(my_reorder, show.tip.label=FALSE, edge.width=3)
tiplabels(my_inf$loc, frame="none", adj=-0.2)
my_dmat <- read.table("./data/DMAT_agilis_001_DMAT.ibsMat")
my_matrix <- as.dist(as(my_dmat, "matrix"))
my_tree <- nj(my_matrix)
my_root <- root(my_tree, outgroup=14)
my_reorder <- reorder(my_root, order = "cladewise")
par(mar=c(7,7,2,10), xpd=TRUE)
plot(my_reorder, show.tip.label=FALSE, edge.width=3)
tiplabels(my_inf$loc, frame="none", adj=-0.2)
my_dmat <- read.table("./data/DMAT_agilis_001_DMAT.ibsMat")
my_matrix <- as.dist(as(my_dmat, "matrix"))
my_tree <- nj(my_matrix)
my_root <- root(my_tree, outgroup=12)
my_reorder <- reorder(my_root, order = "cladewise")
par(mar=c(7,7,2,10), xpd=TRUE)
plot(my_reorder, show.tip.label=FALSE, edge.width=3)
tiplabels(my_inf$loc, frame="none", adj=-0.2)
my_dmat <- read.table("./data/DMAT_agilis_001_DMAT.ibsMat")
my_matrix <- as.dist(as(my_dmat, "matrix"))
my_tree <- nj(my_matrix)
my_root <- root(my_tree, outgroup=12)
my_reorder <- reorder(my_root, order = "cladewise")
par(mar=c(1,1,1,5), xpd=TRUE)
plot(my_reorder, show.tip.label=FALSE, edge.width=3)
tiplabels(my_inf$loc, frame="none", adj=-0.2)
my_data <- read.table("dist_categories.txt", header=TRUE)
my_data <- read.table("./data/dist_categories.txt", header=TRUE)
par(mar=c(7,4,1,1))
plot(jitter(my_data$comp, factor=0.5), my_data$dist,
xlim=c(1,3), ylim=c(0.3,0.55),
xlab="", ylab="Genetic distance", axes=F,
pch=21, bg=my_data$col, cex=1
)
my_names <- c(
"between\ndune",
"within\ndune",
"between south\nand dune"
)
axis(1, at=c(1:3), labels=my_names, las=3, cex.axis=0.8)
axis(2, at=c(0.3, 0.35, 0.4, 0.45, 0.4, 0.45, 0.5, 0.55), las=1, cex.axis=0.8)
my_data <- read.table("./data/dist_categories.txt", header=TRUE)
par(mar=c(7,4,1,1))
plot(jitter(my_data$comp, factor=0.5), my_data$dist,
xlim=c(0,4), ylim=c(0.3,0.55),
xlab="", ylab="Genetic distance", axes=F,
pch=21, bg=my_data$col, cex=1
)
my_names <- c(
"between\ndune",
"within\ndune",
"between south\nand dune"
)
axis(1, at=c(1:3), labels=my_names, las=3, cex.axis=0.8)
axis(2, at=c(0.3, 0.35, 0.4, 0.45, 0.4, 0.45, 0.5, 0.55), las=1, cex.axis=0.8)
my_data <- read.table("./data/dist_categories.txt", header=TRUE)
par(mar=c(7,4,1,1))
plot(jitter(my_data$comp, factor=0.5), my_data$dist,
xlim=c(0.5,3.5), ylim=c(0.3,0.55),
xlab="", ylab="Genetic distance", axes=F,
pch=21, bg=my_data$col, cex=1
)
my_names <- c(
"between\ndune",
"within\ndune",
"between south\nand dune"
)
axis(1, at=c(1:3), labels=my_names, las=3, cex.axis=0.8)
axis(2, at=c(0.3, 0.35, 0.4, 0.45, 0.4, 0.45, 0.5, 0.55), las=1, cex.axis=0.8)
my_data <- read.table("./data/dist_categories.txt", header=TRUE)
par(mar=c(7,4,1,1))
plot(jitter(my_data$comp, factor=1), my_data$dist,
xlim=c(1,3), ylim=c(0.3,0.55),
xlab="", ylab="Genetic distance", axes=F,
pch=21, bg=my_data$col, cex=1
)
my_names <- c(
"between\ndune",
"within\ndune",
"between south\nand dune"
)
axis(1, at=c(1:3), labels=my_names, las=3, cex.axis=0.8)
axis(2, at=c(0.3, 0.35, 0.4, 0.45, 0.4, 0.45, 0.5, 0.55), las=1, cex.axis=0.8)
my_data <- read.table("./data/dist_categories.txt", header=TRUE)
par(mar=c(7,4,1,1))
plot(jitter(my_data$comp, factor=0.1), my_data$dist,
xlim=c(1,3), ylim=c(0.3,0.55),
xlab="", ylab="Genetic distance", axes=F,
pch=21, bg=my_data$col, cex=1
)
my_names <- c(
"between\ndune",
"within\ndune",
"between south\nand dune"
)
axis(1, at=c(1:3), labels=my_names, las=3, cex.axis=0.8)
axis(2, at=c(0.3, 0.35, 0.4, 0.45, 0.4, 0.45, 0.5, 0.55), las=1, cex.axis=0.8)
my_data <- read.table("./data/dist_categories.txt", header=TRUE)
par(mar=c(7,4,1,1))
plot(jitter(my_data$comp, factor=0.1), my_data$dist,
xlim=c(1,3), ylim=c(0.3,0.55),
xlab="", ylab="Genetic distance", axes=F,
pch=21, bg=my_data$col, cex=1
)
my_names <- c(
"between\ndune",
"within\ndune",
"between south\nand dune"
)
axis(1, at=c(1:3), labels=my_names, las=3, cex.axis=0.8)
axis(2, at=c(0.3, 0.35, 0.4, 0.45, 0.4, 0.45, 0.5, 0.55), las=1, cex.axis=0.8)
my_data <- read.table("./data/dist_categories.txt", header=TRUE)
par(mar=c(7,4,1,1))
plot(jitter(my_data$comp, factor=0.1), my_data$dist,
xlim=c(1,3), ylim=c(0.3,0.55),
xlab="", ylab="Genetic distance", axes=F,
pch=21, bg=my_data$col, cex=1
)
my_names <- c(
"between\ndune",
"within\ndune",
"between south\nand dune"
)
axis(1, at=c(1:3), labels=my_names, las=3, cex.axis=1, lwd=0)
axis(2, at=c(0.3, 0.35, 0.4, 0.45, 0.4, 0.45, 0.5, 0.55), las=1, cex.axis=0.8)
my_data <- read.table("./data/dist_categories.txt", header=TRUE)
par(mar=c(7,4,1,1))
plot(jitter(my_data$comp, factor=0.1), my_data$dist,
xlim=c(1,3), ylim=c(0.3,0.55),
xlab="", ylab="Genetic distance", axes=F,
pch=21, bg=my_data$col, cex=1
)
my_names <- c(
"between\ndune",
"within\ndune",
"between south\nand dune"
)
axis(1, at=c(1:3), labels=my_names, las=3, cex.axis=1, lwd=0, lwd.ticks=1)
axis(2, at=c(0.3, 0.35, 0.4, 0.45, 0.4, 0.45, 0.5, 0.55), las=1, cex.axis=0.8)
my_data <- read.table("./data/dist_categories.txt", header=TRUE)
par(mar=c(7,4,1,1))
plot(jitter(my_data$comp, factor=0.1), my_data$dist,
xlim=c(0.5,3), ylim=c(0.3,0.55),
xlab="", ylab="Genetic distance", axes=F,
pch=21, bg=my_data$col, cex=1
)
my_names <- c(
"between\ndune",
"within\ndune",
"between south\nand dune"
)
axis(1, at=c(1:3), labels=my_names, las=3, cex.axis=1, lwd=0, lwd.ticks=1)
axis(2, at=c(0.3, 0.35, 0.4, 0.45, 0.4, 0.45, 0.5, 0.55), las=1, cex.axis=0.8)
my_data <- read.table("./data/dist_categories.txt", header=TRUE)
par(mar=c(7,4,1,1))
plot(jitter(my_data$comp, factor=0.1), my_data$dist,
xlim=c(0.5,3), ylim=c(0.3,0.55),
xlab="", ylab="Genetic distance", axes=F,
pch=21, bg=my_data$col, cex=1,
frame.plot=TRUE
)
my_names <- c(
"between\ndune",
"within\ndune",
"between south\nand dune"
)
axis(1, at=c(1:3), labels=my_names, las=3, cex.axis=1, lwd=0, lwd.ticks=1)
axis(2, at=c(0.3, 0.35, 0.4, 0.45, 0.4, 0.45, 0.5, 0.55), las=1, cex.axis=0.8)
my_data <- read.table("./data/dist_categories.txt", header=TRUE)
par(mar=c(7,4,1,1))
plot(jitter(my_data$comp, factor=0.1), my_data$dist,
xlim=c(0.5,3.5), ylim=c(0.3,0.55),
xlab="", ylab="Genetic distance", axes=F,
pch=21, bg=my_data$col, cex=1,
frame.plot=TRUE
)
my_names <- c(
"between\ndune",
"within\ndune",
"between south\nand dune"
)
axis(1, at=c(1:3), labels=my_names, las=3, cex.axis=1)
axis(2, at=c(0.3, 0.35, 0.4, 0.45, 0.4, 0.45, 0.5, 0.55), las=1, cex.axis=0.8)
my_data <- read.table("./data/dist_categories.txt", header=TRUE)
par(mar=c(7,4,1,1))
plot(jitter(my_data$comp, factor=0.3), my_data$dist,
xlim=c(0.5,3.5), ylim=c(0.3,0.55),
xlab="", ylab="Genetic distance", axes=F,
pch=21, bg=my_data$col, cex=1,
frame.plot=TRUE
)
my_names <- c(
"between\ndune",
"within\ndune",
"between south\nand dune"
)
axis(1, at=c(1:3), labels=my_names, las=3, cex.axis=1)
axis(2, at=c(0.3, 0.35, 0.4, 0.45, 0.4, 0.45, 0.5, 0.55), las=1, cex.axis=0.8)
my_mean <- read.table("means")
my_mean <- read.table("./data/means")
plot(c(1:14), my_mean$V3, axes=FALSE,
type="h", lwd=8, col=my_mean$V4,
ylim=c(0.004,0.0075),
xlab="", ylab="mean heterozygosity"
)
axis(2)
axis(1, at=c(1:14), labels=my_mean$V2, las=3)
par(mar=c(7,7,2,10), xpd=TRUE)
plot(my_pca$vectors[,1], my_pca$vectors[,2],
pch=21, bg=my_inf$col, cex=1.2,
main="PCA of 395,413,986 variable sites",
xlab="PC1: 17.3% variation", ylab="PC2: 13.1% of variation",
cex.axis=0.8, cex.lab=0.8, cex.main=0.8
)
legend(0.25, 0.85, inset=0.01, legend=leglab, pch=21, pt.bg=legcol, cex=0.7, pt.cex=1)
text(0.05, 0.01, labels="Anglesey\nand Gower", cex=0.8)
my_mean <- read.table("./data/means")
plot(c(1:14), my_mean$V3, axes=FALSE,
type="h", lwd=8, col=my_mean$V4,
ylim=c(0.004,0.0075),
xlab="", ylab="mean heterozygosity"
)
axis(2)
axis(1, at=c(1:14), labels=my_mean$V2, las=3)
my_mean <- read.table("./data/means")
plot(c(1:16), my_mean$V3, axes=FALSE,
type="h", lwd=8, col=my_mean$V4,
ylim=c(0.004,0.0075),
xlab="", ylab="mean heterozygosity"
)
axis(2)
axis(1, at=c(1:14), labels=my_mean$V2, las=3)
my_mean <- read.table("./data/means")
plot(c(1:16), my_mean$V3, axes=FALSE,
type="h", lwd=8, col=my_mean$V4,
ylim=c(0.004,0.0075),
xlab="", ylab="mean heterozygosity"
)
axis(2)
axis(1, at=c(1:16), labels=my_mean$V2, las=3)
my_mean <- read.table("./data/means")
plot(c(1:16), my_mean$V3, axes=FALSE,
type="h", lwd=8, col=my_mean$V4,
ylim=c(0,0.0075),
xlab="", ylab="mean heterozygosity"
)
axis(2)
axis(1, at=c(1:16), labels=my_mean$V2, las=3)
my_mean <- read.table("./data/means")
par(mar=c(7,4,1,1))
plot(c(1:16), my_mean$V3, axes=FALSE,
type="h", lwd=8, col=my_mean$V4,
ylim=c(0,0.0075),
xlab="", ylab="mean heterozygosity"
)
axis(2)
axis(1, at=c(1:16), labels=my_mean$V2, las=3)
my_mean <- read.table("./data/means")
par(mar=c(7,4,1,1))
plot(c(1:16), my_mean$V3, axes=FALSE,
type="h", lwd=8, col=my_mean$V4,
ylim=c(0,0.0075),
xlab="", ylab="mean heterozygosity"
)
axis(2, at=c(0,0.002,0.004,0.006,0.008))
axis(1, at=c(1:16), labels=my_mean$V2, las=3)
my_mean <- read.table("./data/means")
par(mar=c(7,4,1,1))
plot(c(1:16), my_mean$V3, axes=FALSE,
type="h", lwd=8, col=my_mean$V4,
ylim=c(0,0.008),
xlab="", ylab="mean heterozygosity"
)
axis(2, at=c(0,0.002,0.004,0.006,0.008))
axis(1, at=c(1:16), labels=my_mean$V2, las=3)
my_mean <- read.table("./data/means")
par(mar=c(7,4,1,1))
plot(c(1:16), my_mean$V3, axes=FALSE,
type="h", lwd=8, col=my_mean$V4,
ylim=c(0,0.008),
xlab="", ylab="mean heterozygosity"
)
axis(2, at=c(0,0.002,0.004,0.006,0.008), las=2)
axis(1, at=c(1:16), labels=my_mean$V2, las=3)
my_mean <- read.table("./data/means")
par(mar=c(7,4,1,1))
plot(c(1:16), my_mean$V3, axes=FALSE,
type="h", lwd=8, col=my_mean$V4,
ylim=c(0,0.008),
xlab="", ylab="mean heterozygosity"
)
axis(2, at=c(0,0.002,0.004,0.006,0.008), las=2, cex=0.08)
axis(1, at=c(1:16), labels=my_mean$V2, las=3)
my_mean <- read.table("./data/means")
par(mar=c(7,4,1,1))
plot(c(1:16), my_mean$V3, axes=FALSE,
type="h", lwd=8, col=my_mean$V4,
ylim=c(0,0.008),
xlab="", ylab="mean heterozygosity"
)
axis(2, at=c(0,0.002,0.004,0.006,0.008), las=2, cex.axis=0.8)
axis(1, at=c(1:16), labels=my_mean$V2, las=3)
#set variables
Ne=15
alleles=4
Nsnp=2
snps=400
Nmsat=30
msats=10
#set up first plot
plot(1, type="n",
xlab="generations", ylab="estimated heterozygosity",
main="Genome sequencing, 2 individuals, Ne=15",
xlim=c(0,20), ylim=c(0,0.8)
)
#loop through simulation and plot
x <- 1
repeat {
geno <- sim.genot.t(size=Nsnp,nbal=alleles,nbloc=snps,nbpop=1,N=Ne,mig=0,mut=0,f=0,t=1,IIM=TRUE)
calc <- basic.stats(geno)
points(jitter(1, amount=0.4), calc$overall[1], pch=1, cex=0.5, col="red")
geno <- sim.genot.t(size=Nsnp,nbal=alleles,nbloc=snps,nbpop=1,N=Ne,mig=0,mut=0,f=0,t=5,IIM=TRUE)
calc <- basic.stats(geno)
points(jitter(5, amount=0.4), calc$overall[1], pch=1, cex=0.5, col="red")
geno <- sim.genot.t(size=Nsnp,nbal=alleles,nbloc=snps,nbpop=1,N=Ne,mig=0,mut=0,f=0,t=10,IIM=TRUE)
calc <- basic.stats(geno)
points(jitter(10, amount=0.4), calc$overall[1], pch=1, cex=0.5, col="red")
geno <- sim.genot.t(size=Nsnp,nbal=alleles,nbloc=snps,nbpop=1,N=Ne,mig=0,mut=0,f=0,t=15,IIM=TRUE)
calc <- basic.stats(geno)
points(jitter(15, amount=0.4), calc$overall[1], pch=1, cex=0.5, col="red")
geno <- sim.genot.t(size=Nsnp,nbal=alleles,nbloc=snps,nbpop=1,N=Ne,mig=0,mut=0,f=0,t=20,IIM=TRUE)
calc <- basic.stats(geno)
points(jitter(20, amount=0.4), calc$overall[1], pch=1, cex=0.5, col="red")
x = x+1
if (x == 20){
break
}
}
#null simulation and plot
x <- 1
repeat {
geno <- sim.genot.t(size=Nsnp,nbal=alleles,nbloc=snps,nbpop=1,N=Ne,mig=1,mut=0,f=0,t=1,IIM=TRUE)
calc <- basic.stats(geno)
points(jitter(1, amount=0.4), calc$overall[1], pch=1, cex=0.5, col="black")
geno <- sim.genot.t(size=Nsnp,nbal=alleles,nbloc=snps,nbpop=1,N=Ne,mig=1,mut=0,f=0,t=5,IIM=TRUE)
calc <- basic.stats(geno)
points(jitter(5, amount=0.4), calc$overall[1], pch=1, cex=0.5, col="black")
geno <- sim.genot.t(size=Nsnp,nbal=alleles,nbloc=snps,nbpop=1,N=Ne,mig=1,mut=0,f=0,t=10,IIM=TRUE)
calc <- basic.stats(geno)
points(jitter(10, amount=0.4), calc$overall[1], pch=1, cex=0.5, col="black")
geno <- sim.genot.t(size=Nsnp,nbal=alleles,nbloc=snps,nbpop=1,N=Ne,mig=1,mut=0,f=0,t=15,IIM=TRUE)
calc <- basic.stats(geno)
points(jitter(15, amount=0.4), calc$overall[1], pch=1, cex=0.5, col="black")
geno <- sim.genot.t(size=Nsnp,nbal=alleles,nbloc=snps,nbpop=1,N=Ne,mig=1,mut=0,f=0,t=20,IIM=TRUE)
calc <- basic.stats(geno)
points(jitter(20, amount=0.4), calc$overall[1], pch=1, cex=0.5, col="black")
x = x+1
if (x == 20){
break
}
}
library(tidyverse)
library(gganimate)
library(RColorBrewer)
library(knitr)
library(hierfstat)
library(ape)
my_het <- read.table("het", header=TRUE, fill=TRUE)
my_het <- read.table("./data/het", header=TRUE, fill=TRUE)
plot(c(1:114), my_het$shm_war, main="shm wareham", type="h", ylim=c(0,0.015))
plot(c(1:114), my_het$ehd_fre, main="ehd frensham", type="h", ylim=c(0,0.015))
plot(c(1:114), my_het$j8b_fre, main="j8b frensham", type="h", ylim=c(0,0.015))
setwd("~/Documents/work_x1_sync/scripts/slidify")
library(slidify)
author("Ax_slidify_eg_bangor")
library(tidyverse)
library(gganimate)
library(RColorBrewer)
library(knitr)
library(DiagrammeR)
# get data as tibble
height_data <- read_tsv("./data/Galton.txt",
col_types= cols(
Family = col_character(),
Father = col_double(),
Mother = col_double(),
Gender = col_character(),
Height = col_double(),
Kids = col_integer()
)
)
# convert inches: metres = inch/39.37
height_m <- mutate(height_data,
fth = Father / 39.37,
mth = Mother / 39.37,
hgt = Height / 39.37
)
# histogram of heights
all_hist <- ggplot(height_m) +
geom_histogram(aes(x = hgt), binwidth = 0.035, colour = "black", fill = "coral") +
theme_bw(base_size = 15) +
labs(x="height (m)", y="count")
# animate plot
anim <- all_hist +
transition_states(Gender,
transition_length = 1,
state_length = 1
) +
ease_aes('cubic-in-out')
anim
install.packages("gifski")
install.packages("magick")
install.packages("magick")
convert -list resource
# get data as tibble
height_data <- read_tsv("./data/Galton.txt",
col_types= cols(
Family = col_character(),
Father = col_double(),
Mother = col_double(),
Gender = col_character(),
Height = col_double(),
Kids = col_integer()
)
)
# convert inches: metres = inch/39.37
height_m <- mutate(height_data,
fth = Father / 39.37,
mth = Mother / 39.37,
hgt = Height / 39.37
)
# histogram of heights
all_hist <- ggplot(height_m) +
geom_histogram(aes(x = hgt), binwidth = 0.035, colour = "black", fill = "coral") +
theme_bw(base_size = 15) +
labs(x="height (m)", y="count")
# animate plot
anim <- all_hist +
transition_states(Gender,
transition_length = 1,
state_length = 1
) +
ease_aes('cubic-in-out')
anim
anim
anim <- all_hist +
transition_states(Gender,
transition_length = 1,
state_length = 1
) +
ease_aes('cubic-in-out')
install.packages("gifski")
install.packages("gifski")
anim
anim <- all_hist +
transition_states(Gender,
transition_length = 1,
state_length = 1
) +
ease_aes('cubic-in-out')
anim
library(gifski)
anim
remove.packages("magick", lib="~/R/x86_64-pc-linux-gnu-library/4.1")
anim
